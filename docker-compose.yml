version: '3.8'

services:
  ui:
    container_name: ffdc-ui
    build:
      dockerfile: ./ops/docker/Dockerfile
      context: ./ui
    volumes:
      - ./ui:/home/node/service
    command: npm run dev
    ports:
      - ${UI_PORT}
    env_file:
      - .env
    depends_on:
      - api
      - db
    extra_hosts:
      - "ffdc-api.localhost:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui.rule=Host(`ffdc.localhost`)"
      - "traefik.http.routers.ui.entrypoints=web,wss"
      - "traefik.http.services.ui.loadbalancer.server.port=${UI_PORT}"

  api:
    container_name: ffdc-api
    build:
      dockerfile: ./ops/docker/Dockerfile
      context: ./api
    volumes:
      - ./api:/home/node/service
    command: npm run start:dev
    user: node
    ports:
      - ${API_PORT}
    env_file:
      - .env
    depends_on:
      - db
      - reverse-proxy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`ffdc-api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=${API_PORT}"

  db:
    container_name: ffdc-db
    image: postgres:14.3-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    volumes:
      - data:/var/lib/postgresql/data
      - ./api/ops/postgres:/docker-entrypoint-initdb.d/

  reverse-proxy:
    image: traefik:v2.8
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.wss.address=:24678"
    ports:
      - "80:80"
      - "8080:8080"
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  default:
    name: ffdc-reverse-proxy

volumes:
  data: ~
